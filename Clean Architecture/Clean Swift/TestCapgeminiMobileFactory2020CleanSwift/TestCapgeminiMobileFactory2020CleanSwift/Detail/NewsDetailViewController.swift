//
//  NewsDetailViewController.swift
//  TestCapgeminiMobileFactory2020CleanSwift
//
//  Created by Koussaïla Ben Mamar on 19/02/2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class NewsDetailViewController: UIViewController {
    
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var articleImageView: UIImageView!
    @IBOutlet weak var publishDateLabel: UILabel!
    @IBOutlet weak var authorLabel: UILabel!
    @IBOutlet weak var contentLabel: UILabel!
    @IBOutlet weak var sourceLabel: UILabel!
    
    private var interactor: NewsDetailBusinessLogic?
    var router: NewsDetailDataPassing?
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        retrievePassedArticle()
    }
    
    // Mise en place des composants de Clean Swift
    private func setup() {
        let interactor = NewsDetailInteractor()
        let presenter = NewsDetailPresenter()
        let router = NewsDetailRouter()
        self.interactor = interactor
        self.router = router
        interactor.presenter = presenter
        presenter.view = self
        router.view = self
        router.dataStore = interactor
    }
    
    private func retrievePassedArticle() {
        interactor?.getPassedArticle(request: NewsDetail.ArticleDetails.Request())
    }
}

extension NewsDetailViewController: NewsDetailDisplayLogic {
    func displayArticle(with viewModel: NewsDetail.ArticleDetails.ViewModel) {
        print("Article affiché: \(viewModel)")
        // Ombre sur le texte, pour une meilleure lisibilité
        titleLabel.layer.shadowOpacity = 0.8
        titleLabel.layer.shadowRadius = 5
        titleLabel.layer.shadowColor = CGColor(red: 0, green: 0, blue: 0, alpha: 1)
        publishDateLabel.layer.shadowOpacity = 0.8
        publishDateLabel.layer.shadowRadius = 5
        publishDateLabel.layer.shadowColor = CGColor(red: 0, green: 0, blue: 0, alpha: 1)
        
        // Le contenu depuis la vue modèle
        titleLabel.text = viewModel.title
        publishDateLabel.text = viewModel.publishedAt
        authorLabel.text = viewModel.author
        sourceLabel.text = viewModel.source
        contentLabel.text = viewModel.content
        articleImageView.loadImage(with: viewModel.urlToImage)
    }
}
